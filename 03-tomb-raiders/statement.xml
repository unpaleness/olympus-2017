<?xml version="1.0" encoding="utf-8"?>
<problem
  package = "ru.ejudge.sample_contest"
  id = "4"
  type = "standard">
  <statement language="ru_RU">
    <title>Племя Студиосов</title>
    <description>
      <p>
        В одной сказочной стране есть древний храм, залы которого доверху наполнены сокровищами. Между залами есть сеть переходов. Можно перейти из любого зала в любой другой (напрямую или через входы в другие). Для каждой пары залов есть только одна последовательность переходов, соединяющая их.
      </p>
      <p>
        Два юных расхитителя гробниц нашли данный храм и хотят заполучить его сокровища. Но вот незадача, тележка, на которую можно грузить богатства всего одна, да и делить сокровища между собой они не хотят. Поэтому они придумали следующую игру. Они делают ходы по очереди. Каждый ход заключается в следующих действиях. Игрок собирает сокровища и грузит их в тележку и вместе со своим коллегой покидают зал. После этого активируется охранная система зала, и повторное его посещение становится невозможным. После того, как игроки попадают в другой зал, второй расхититель делает свой ход – и дальше по очереди. Проигрывает тот, кто не может сделать ход. И все сокровища достаются победителю.
      </p>
      <p>
        Напишите программу, которая по начальному списку переходов и номеру зала, в котором юные расхитители гробниц начинают игру, определяет, кто выигрывает, если они играют идеально (каждый выбирает лучший ход).
      </p>
      <p><b>Исходные данные</b></p>
      <p>
        Первая строка содержит два целых числа: n и k, разделённые пробелом. Здесь n - количество залов (n &le; 1000), а k - номер зала, являющегося начальной точкой игры (1 &le; k &le; n). Следующая n - 1 строка содержит пары целых чисел, разделённых пробелами. Это номера залов, соединённых переходом. Все переходы двусторонние и упомянуты только один раз. Каждый зал соединён переходами не более чем с 20 другими.
      </p>
      <p><b>Результат</b></p>
      <p>
        Если игрок, начинающий игру, выигрывает, программа должна написать "First player visiting hall L wins", где L - номер зала, в который игрок должен перейти из текущего. Если таких залов несколько, программа должна выбрать вариант с меньшим номером зала. Если начинающий игрок проигрывает, программа должна написать "First player loses".
      </p>
    </description>
  </statement>
  <examples>
    <example>
      <input>
4 3
3 2
3 1
1 4
      </input>
      <output>First player visiting hall 2 wins</output>
    </example>
  </examples>
</problem>
